// auto generated by scripts/i18n.ts
import React from 'react';
import { Trans } from '@yiminghe/react-i18next';

/* eslint-disable */
export interface I18nRes {
  n: {
    returnType: '{n}' | 'en: {n}';

    valuesType: {
      n: any;
    };

    componentsType: {};
  };
  c: {
    returnType: '<s>{c}</s>' | 'en: <s>{c}</s>';

    valuesType: {
      c: any;
    };

    componentsType: {
      s: React.ReactNode;
    };
  };
}

export type I18nResKeys = keyof I18nRes;
export type I18nNsType = string;

export type I18nTranslate = <T extends I18nResKeys>(
  ...args:
    | [
        p: T,
        options: I18nRes[T]['valuesType'] & {
          ns?: I18nNsType | I18nNsType[];
          defaultValue?: string;
        },
      ]
    | [
        p: T,
        defaultValue: string,
        options: I18nRes[T]['valuesType'] & { ns?: I18nNsType | I18nNsType[] },
      ]
) => I18nRes[T]['returnType'];

export function getI18nComponent(i18n: any) {
  return <T extends I18nResKeys>({
    i18nKey,
    values,
    components,
  }: {
    i18nKey: T;
    defaultValue?: string;
    values: I18nRes[T]['valuesType'];
    components: I18nRes[T]['componentsType'];
  }): I18nRes[T]['returnType'] => {
    return React.createElement(Trans, {
      i18nKey,
      values,
      components,
      t: i18n.t,
      i18n,
    } as any) as any;
  };
}
